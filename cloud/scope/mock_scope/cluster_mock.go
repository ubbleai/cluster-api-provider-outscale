// Code generated by MockGen. DO NOT EDIT.
// Source: ./cluster.go

// Package mock_scope is a generated GoMock package.
package mock_scope

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1beta1 "github.com/outscale-dev/cluster-api-provider-outscale.git/api/v1beta1"
	v1beta10 "sigs.k8s.io/cluster-api/api/v1beta1"
)

// MockClusterScopeInterface is a mock of ClusterScopeInterface interface.
type MockClusterScopeInterface struct {
	ctrl     *gomock.Controller
	recorder *MockClusterScopeInterfaceMockRecorder
}

// MockClusterScopeInterfaceMockRecorder is the mock recorder for MockClusterScopeInterface.
type MockClusterScopeInterfaceMockRecorder struct {
	mock *MockClusterScopeInterface
}

// NewMockClusterScopeInterface creates a new mock instance.
func NewMockClusterScopeInterface(ctrl *gomock.Controller) *MockClusterScopeInterface {
	mock := &MockClusterScopeInterface{ctrl: ctrl}
	mock.recorder = &MockClusterScopeInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClusterScopeInterface) EXPECT() *MockClusterScopeInterfaceMockRecorder {
	return m.recorder
}

// ListMachines mocks base method.
func (m *MockClusterScopeInterface) ListMachines(ctx context.Context) ([]*v1beta10.Machine, []*v1beta1.OscMachine, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListMachines", ctx)
	ret0, _ := ret[0].([]*v1beta10.Machine)
	ret1, _ := ret[1].([]*v1beta1.OscMachine)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListMachines indicates an expected call of ListMachines.
func (mr *MockClusterScopeInterfaceMockRecorder) ListMachines(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListMachines", reflect.TypeOf((*MockClusterScopeInterface)(nil).ListMachines), ctx)
}
